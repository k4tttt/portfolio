{"ast":null,"code":"var _jsxFileName = \"/Users/tyrawoden/Documents/VSCode/portfolio/src/components/Start.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Start = () => {\n  _s();\n  const [text, setText] = useState('awesome');\n  const [color, setColor] = useState('blue');\n  const [i, setI] = useState(0);\n  const adjectives = [\"awesome\", \"user-friendly\", \"interactive\", \"fun\", \"intuitive\"];\n  const colors = [\"green\", \"pink\", \"blue\"];\n  let j = 0;\n  useEffect(() => {\n    setInterval(() => {\n      //const { newText, newColor } = generateNewTextAndColor();\n      setI(i < adjectives.length - 1 ? i++ : 0);\n      j = j < colors.length - 1 ? j++ : 0;\n      let newText = adjectives[i];\n      let newColor = colors[j];\n      setText(newText);\n      setColor(newColor);\n    }, 1500);\n\n    //return () => clearInterval(intervalId);\n  }, []);\n\n  /*\n  const generateNewTextAndColor = () => {\n      if (i < adjectives.length - 1) { i++; }\n      else { i = 0; }\n      if (j < colors.length - 1) { j++; }\n      else { j = 0; }\n      const newText = adjectives[i];\n      const newColor = colors[j];\n      return { newText, newColor };\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"titleScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello, I am\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"BLACKOUT\",\n      children: \"tyra woden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"I have a passion for creating \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: color,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }, this), \" digital experiences.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Start, \"dnu0eSO662DAotGoIpjERgvmPKU=\");\n_c = Start;\nexport default Start;\nvar _c;\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Start","_s","text","setText","color","setColor","i","setI","adjectives","colors","j","setInterval","length","newText","newColor","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/tyrawoden/Documents/VSCode/portfolio/src/components/Start.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Start = () => {\n    const [text, setText] = useState('awesome');\n    const [color, setColor] = useState('blue');\n    const [i, setI] = useState(0);\n    const adjectives = [\"awesome\", \"user-friendly\", \"interactive\", \"fun\", \"intuitive\"];\n    const colors = [\"green\", \"pink\", \"blue\"];\n    let j = 0;\n\n    useEffect(() => {\n        setInterval(() => {\n            //const { newText, newColor } = generateNewTextAndColor();\n            setI(i < adjectives.length - 1 ? i++ : 0);\n            j = j < colors.length - 1 ? j++ : 0;\n            let newText = adjectives[i];\n            let newColor = colors[j];\n            setText(newText);\n            setColor(newColor);\n        }, 1500);\n\n        //return () => clearInterval(intervalId);\n    }, []);\n\n    /*\n    const generateNewTextAndColor = () => {\n        if (i < adjectives.length - 1) { i++; }\n        else { i = 0; }\n        if (j < colors.length - 1) { j++; }\n        else { j = 0; }\n        const newText = adjectives[i];\n        const newColor = colors[j];\n        return { newText, newColor };\n    };*/\n\n    return (\n        <div id='titleScreen'>\n            <p>Hello, I am</p>\n            <h1 className='BLACKOUT'>tyra woden</h1>\n            <p>I have a passion for creating <span className={color}>{text}</span> digital experiences.</p>\n        </div>\n    );\n}\n\nexport default Start;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAM,CAACU,CAAC,EAAEC,IAAI,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAMY,UAAU,GAAG,CAAC,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,KAAK,EAAE,WAAW,CAAC;EAClF,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;EACxC,IAAIC,CAAC,GAAG,CAAC;EAETb,SAAS,CAAC,MAAM;IACZc,WAAW,CAAC,MAAM;MACd;MACAJ,IAAI,CAACD,CAAC,GAAGE,UAAU,CAACI,MAAM,GAAG,CAAC,GAAGN,CAAC,EAAE,GAAG,CAAC,CAAC;MACzCI,CAAC,GAAGA,CAAC,GAAGD,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGF,CAAC,EAAE,GAAG,CAAC;MACnC,IAAIG,OAAO,GAAGL,UAAU,CAACF,CAAC,CAAC;MAC3B,IAAIQ,QAAQ,GAAGL,MAAM,CAACC,CAAC,CAAC;MACxBP,OAAO,CAACU,OAAO,CAAC;MAChBR,QAAQ,CAACS,QAAQ,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;;IAER;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIf,OAAA;IAAKgB,EAAE,EAAC,aAAa;IAAAC,QAAA,gBACjBjB,OAAA;MAAAiB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBrB,OAAA;MAAIsB,SAAS,EAAC,UAAU;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrB,OAAA;MAAAiB,QAAA,GAAG,gCAA8B,eAAAjB,OAAA;QAAMsB,SAAS,EAAEjB,KAAM;QAAAY,QAAA,EAAEd;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,yBAAqB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAxCKD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}