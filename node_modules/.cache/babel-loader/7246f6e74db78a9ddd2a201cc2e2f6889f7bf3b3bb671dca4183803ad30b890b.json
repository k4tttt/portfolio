{"ast":null,"code":"var _jsxFileName = \"/Users/tyrawoden/Documents/VSCode/portfolio/src/components/Start.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Start = () => {\n  _s();\n  const [text, setText] = useState('awesome');\n  const [color, setColor] = useState('blue');\n  const indexRef = useRef(0);\n  const adjectives = useMemo(() => [\"awesome\", \"user-friendly\", \"interactive\", \"fun\", \"intuitive\"], []);\n  const colors = useMemo(() => [\"pink\", \"green\", \"blue\"], []);\n  useEffect(() => {\n    const updateTextAndColor = () => {\n      indexRef.current = (indexRef.current + 1) % adjectives.length;\n      const newText = adjectives[indexRef.current];\n      const newColor = colors[indexRef.current % colors.length];\n      setText(newText);\n      setColor(newColor);\n      setTimeout(updateTextAndColor, 1500);\n    };\n    const timeoutId = setTimeout(updateTextAndColor, 1500);\n    return () => clearTimeout(timeoutId);\n  }, [adjectives, colors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"titleScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello, I am\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"BLACKOUT\",\n      children: \"tyra woden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"I have a passion for creating \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: color,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 46\n      }, this), \" digital experiences.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Start, \"FAR3CY3GvSqDGdX4A48JMQe0hWI=\");\n_c = Start;\nexport default Start;\nvar _c;\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","jsxDEV","_jsxDEV","Start","_s","text","setText","color","setColor","indexRef","adjectives","colors","updateTextAndColor","current","length","newText","newColor","setTimeout","timeoutId","clearTimeout","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/tyrawoden/Documents/VSCode/portfolio/src/components/Start.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\n\nconst Start = () => {\n    const [text, setText] = useState('awesome');\n    const [color, setColor] = useState('blue');\n    const indexRef = useRef(0);\n    const adjectives = useMemo(() => [\"awesome\", \"user-friendly\", \"interactive\", \"fun\", \"intuitive\"], []);\n    const colors = useMemo(() => [\"pink\", \"green\", \"blue\"], []);\n\n    useEffect(() => {\n        const updateTextAndColor = () => {\n            indexRef.current = (indexRef.current + 1) % adjectives.length;\n            const newText = adjectives[indexRef.current];\n            const newColor = colors[indexRef.current % colors.length];\n            setText(newText);\n            setColor(newColor);\n            setTimeout(updateTextAndColor, 1500);\n        };\n\n        const timeoutId = setTimeout(updateTextAndColor, 1500);\n\n        return () => clearTimeout(timeoutId);\n    }, [adjectives, colors]);\n\n    return (\n        <div id='titleScreen'>\n            <p>Hello, I am</p>\n            <h1 className='BLACKOUT'>tyra woden</h1>\n            <p>I have a passion for creating <span className={color}>{text}</span> digital experiences.</p>\n        </div>\n    );\n}\n\nexport default Start;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAMY,QAAQ,GAAGV,MAAM,CAAC,CAAC,CAAC;EAC1B,MAAMW,UAAU,GAAGV,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,KAAK,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC;EACrG,MAAMW,MAAM,GAAGX,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC;EAE3DF,SAAS,CAAC,MAAM;IACZ,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;MAC7BH,QAAQ,CAACI,OAAO,GAAG,CAACJ,QAAQ,CAACI,OAAO,GAAG,CAAC,IAAIH,UAAU,CAACI,MAAM;MAC7D,MAAMC,OAAO,GAAGL,UAAU,CAACD,QAAQ,CAACI,OAAO,CAAC;MAC5C,MAAMG,QAAQ,GAAGL,MAAM,CAACF,QAAQ,CAACI,OAAO,GAAGF,MAAM,CAACG,MAAM,CAAC;MACzDR,OAAO,CAACS,OAAO,CAAC;MAChBP,QAAQ,CAACQ,QAAQ,CAAC;MAClBC,UAAU,CAACL,kBAAkB,EAAE,IAAI,CAAC;IACxC,CAAC;IAED,MAAMM,SAAS,GAAGD,UAAU,CAACL,kBAAkB,EAAE,IAAI,CAAC;IAEtD,OAAO,MAAMO,YAAY,CAACD,SAAS,CAAC;EACxC,CAAC,EAAE,CAACR,UAAU,EAAEC,MAAM,CAAC,CAAC;EAExB,oBACIT,OAAA;IAAKkB,EAAE,EAAC,aAAa;IAAAC,QAAA,gBACjBnB,OAAA;MAAAmB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBvB,OAAA;MAAIwB,SAAS,EAAC,UAAU;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCvB,OAAA;MAAAmB,QAAA,GAAG,gCAA8B,eAAAnB,OAAA;QAAMwB,SAAS,EAAEnB,KAAM;QAAAc,QAAA,EAAEhB;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,yBAAqB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEd,CAAC;AAAArB,EAAA,CA7BKD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}